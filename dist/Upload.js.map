{"version":3,"sources":["../src/Upload.js"],"names":["Upload","nextProps","fileList","props","file","targetItem","status","nextFileList","state","concat","fileIndex","uid","push","onChange","window","FormData","autoUpdateProgress","response","clearProgressTimer","JSON","parse","e","percent","event","error","upload","abort","handleRemove","info","setState","dragState","type","beforeUpload","result","map","fileToObject","item","then","node","locale","showUploadList","listType","onPreview","previewFile","disabled","showRemoveIcon","showPreviewIcon","handleManualRemove","getPrefixCls","customizePrefixCls","prefixCls","className","children","rcUploadProps","onStart","onError","onProgress","onSuccess","uploadList","defaultLocale","renderUploadList","dragCls","some","onFileDrop","saveUpload","uploadButtonCls","id","uploadButton","undefined","display","defaultFileList","_","getPercent","curPercent","progressTimer","setInterval","onRemove","Promise","resolve","ret","removedFileList","clearInterval","renderUpload","Component","multiple","action","data","accept","T","supportServerRender"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\nimport RcUpload from 'rc-upload';\nimport classNames from 'classnames';\nimport uniqBy from 'lodash/uniqBy';\nimport findIndex from 'lodash/findIndex';\nimport UploadList from './UploadList';\nimport { T, fileToObject, genPercentAdd, getFileItem, removeFileItem } from './utils';\nimport LocaleReceiver from '../locale-provider/LocaleReceiver';\nimport defaultLocale from '../locale-provider/default';\nimport { ConfigConsumer, ConfigConsumerProps } from '../config-provider';\n\nclass Upload extends Component {\n  static defaultProps = {\n    type: 'select',\n    multiple: false,\n    action: '',\n    data: {},\n    accept: '',\n    beforeUpload: T,\n    showUploadList: true,\n    listType: 'text', // or picture\n    className: '',\n    disabled: false,\n    supportServerRender: true,\n  };\n\n  static getDerivedStateFromProps(nextProps) {\n    if ('fileList' in nextProps) {\n      return {\n        fileList: nextProps.fileList || [],\n      };\n    }\n    return null;\n  }\n\n  recentUploadStatus;\n\n  progressTimer;\n\n  upload;\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      fileList: props.fileList || props.defaultFileList || [],\n      dragState: 'drop',\n    };\n  }\n\n  componentWillUnmount() {\n    this.clearProgressTimer();\n  }\n\n  onStart = (file: RcFile) => {\n    const targetItem = fileToObject(file);\n    targetItem.status = 'uploading';\n\n    const nextFileList = this.state.fileList.concat();\n\n    const fileIndex = findIndex(nextFileList, ({ uid }) => uid === targetItem.uid);\n    if (fileIndex === -1) {\n      nextFileList.push(targetItem);\n    } else {\n      nextFileList[fileIndex] = targetItem;\n    }\n\n    this.onChange({\n      file: targetItem,\n      fileList: nextFileList,\n    });\n    // fix ie progress\n    if (!window.FormData) {\n      this.autoUpdateProgress(0, targetItem);\n    }\n  };\n\n  autoUpdateProgress(_, file) {\n    const getPercent = genPercentAdd();\n    let curPercent = 0;\n    this.clearProgressTimer();\n    this.progressTimer = setInterval(() => {\n      curPercent = getPercent(curPercent);\n      this.onProgress(\n        {\n          percent: curPercent * 100,\n        },\n        file,\n      );\n    }, 200);\n  }\n\n  onSuccess = (response, file) => {\n    this.clearProgressTimer();\n    try {\n      if (typeof response === 'string') {\n        response = JSON.parse(response);\n      }\n    } catch (e) {\n      /* do nothing */\n    }\n    const fileList = this.state.fileList;\n    const targetItem = getFileItem(file, fileList);\n    // removed\n    if (!targetItem) {\n      return;\n    }\n    targetItem.status = 'done';\n    targetItem.response = response;\n    this.onChange({\n      file: { ...targetItem },\n      fileList,\n    });\n  };\n\n  onProgress = (e, file) => {\n    const fileList = this.state.fileList;\n    const targetItem = getFileItem(file, fileList);\n    // removed\n    if (!targetItem) {\n      return;\n    }\n    targetItem.percent = e.percent;\n    this.onChange({\n      event: e,\n      file: { ...targetItem },\n      fileList: this.state.fileList,\n    });\n  };\n\n  onError = (error, response, file) => {\n    this.clearProgressTimer();\n    const fileList = this.state.fileList;\n    const targetItem = getFileItem(file, fileList);\n    // removed\n    if (!targetItem) {\n      return;\n    }\n    targetItem.error = error;\n    targetItem.response = response;\n    targetItem.status = 'error';\n    this.onChange({\n      file: { ...targetItem },\n      fileList,\n    });\n  };\n\n  handleRemove(file) {\n    const { onRemove } = this.props;\n    const { status } = file;\n\n    file.status = 'removed'; // eslint-disable-line\n\n    Promise.resolve(typeof onRemove === 'function' ? onRemove(file) : onRemove).then(ret => {\n      // Prevent removing file\n      if (ret === false) {\n        file.status = status;\n        return;\n      }\n\n      const removedFileList = removeFileItem(file, this.state.fileList);\n      if (removedFileList) {\n        this.onChange({\n          file,\n          fileList: removedFileList,\n        });\n      }\n    });\n  }\n\n  handleManualRemove = file => {\n    if (this.upload) {\n      this.upload.abort(file);\n    }\n    this.handleRemove(file);\n  };\n\n  onChange = info => {\n    if (!('fileList' in this.props)) {\n      this.setState({ fileList: info.fileList });\n    }\n\n    const { onChange } = this.props;\n    if (onChange) {\n      onChange(info);\n    }\n  };\n\n  onFileDrop = e => {\n    this.setState({\n      dragState: e.type,\n    });\n  };\n\n  beforeUpload = (file, fileList) => {\n    if (!this.props.beforeUpload) {\n      return true;\n    }\n    const result = this.props.beforeUpload(file, fileList);\n    if (result === false) {\n      this.onChange({\n        file,\n        fileList: uniqBy(\n          this.state.fileList.concat(fileList.map(fileToObject)),\n          (item: UploadFile) => item.uid,\n        ),\n      });\n      return false;\n    }\n    if (result && result.then) {\n      return result;\n    }\n    return true;\n  };\n\n  clearProgressTimer() {\n    clearInterval(this.progressTimer);\n  }\n\n  saveUpload = node => {\n    this.upload = node;\n  };\n\n  renderUploadList = locale => {\n    const { showUploadList, listType, onPreview, previewFile, disabled } = this.props;\n    const { showRemoveIcon, showPreviewIcon } = showUploadList;\n    return (\n      <UploadList\n        listType={listType}\n        items={this.state.fileList}\n        previewFile={previewFile}\n        onPreview={onPreview}\n        onRemove={this.handleManualRemove}\n        showRemoveIcon={!disabled && showRemoveIcon}\n        showPreviewIcon={showPreviewIcon}\n        locale={{ ...locale, ...this.props.locale }}\n      />\n    );\n  };\n\n  renderUpload = ({ getPrefixCls }) => {\n    const {\n      prefixCls: customizePrefixCls,\n      className,\n      showUploadList,\n      listType,\n      type,\n      disabled,\n      children,\n    } = this.props;\n\n    const prefixCls = getPrefixCls('upload', customizePrefixCls);\n\n    const rcUploadProps = {\n      onStart: this.onStart,\n      onError: this.onError,\n      onProgress: this.onProgress,\n      onSuccess: this.onSuccess,\n      ...this.props,\n      prefixCls,\n      beforeUpload: this.beforeUpload,\n    };\n\n    delete rcUploadProps.className;\n\n    const uploadList = showUploadList ? (\n      <LocaleReceiver componentName=\"Upload\" defaultLocale={defaultLocale.Upload}>\n        {this.renderUploadList}\n      </LocaleReceiver>\n    ) : null;\n\n    if (type === 'drag') {\n      const dragCls = classNames(prefixCls, {\n        [`${prefixCls}-drag`]: true,\n        [`${prefixCls}-drag-uploading`]: this.state.fileList.some(\n          file => file.status === 'uploading',\n        ),\n        [`${prefixCls}-drag-hover`]: this.state.dragState === 'dragover',\n        [`${prefixCls}-disabled`]: disabled,\n      });\n      return (\n        <span className={className}>\n          <div\n            className={dragCls}\n            onDrop={this.onFileDrop}\n            onDragOver={this.onFileDrop}\n            onDragLeave={this.onFileDrop}\n          >\n            <RcUpload {...rcUploadProps} ref={this.saveUpload} className={`${prefixCls}-btn`}>\n              <div className={`${prefixCls}-drag-container`}>{children}</div>\n            </RcUpload>\n          </div>\n          {uploadList}\n        </span>\n      );\n    }\n\n    const uploadButtonCls = classNames(prefixCls, {\n      [`${prefixCls}-select`]: true,\n      [`${prefixCls}-select-${listType}`]: true,\n      [`${prefixCls}-disabled`]: disabled,\n    });\n\n    // Remove id to avoid open by label when trigger is hidden\n    // https://github.com/ant-design/ant-design/issues/14298\n    // https://github.com/ant-design/ant-design/issues/16478\n    if (!children || disabled) {\n      delete rcUploadProps.id;\n    }\n\n    const uploadButton = (\n      <div className={uploadButtonCls} style={children ? undefined : { display: 'none' }}>\n        <RcUpload {...rcUploadProps} ref={this.saveUpload} />\n      </div>\n    );\n\n    if (listType === 'picture-card') {\n      return (\n        <span className={className}>\n          {uploadList}\n          {uploadButton}\n        </span>\n      );\n    }\n    return (\n      <span className={className}>\n        {uploadButton}\n        {uploadList}\n      </span>\n    );\n  };\n\n  render() {\n    return <ConfigConsumer>{this.renderUpload}</ConfigConsumer>;\n  }\n}\n\npolyfill(Upload);\n\nexport default Upload;\n"],"file":"Upload.js"}