{"version":3,"sources":["../src/UploadList.js"],"names":["UploadList","file","onRemove","props","e","onPreview","preventDefault","getPrefixCls","customizePrefixCls","prefixCls","items","listType","showPreviewIcon","showRemoveIcon","locale","list","map","progress","icon","status","uploading","thumbUrl","url","thumbnail","name","handlePreview","loadingProgress","progressAttr","percent","infoUploadingClass","linkProps","JSON","parse","preview","style","pointerEvents","opacity","previewIcon","undefined","previewFile","removeIcon","removeFile","handleClose","removeIconClose","actions","message","response","error","statusText","uploadError","iconAndPreview","uid","listClassNames","animationDirection","forEach","document","window","FileReader","File","originFileObj","then","previewDataUrl","forceUpdate","renderUploadList","Component","strokeWidth","showInfo","previewImage"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Animate from 'rc-animate';\nimport classNames from 'classnames';\nimport { previewImage, isImageUrl } from './utils';\nimport Icon from '../icon';\nimport Tooltip from '../tooltip';\nimport Progress from '../progress';\nimport { ConfigConsumer, ConfigConsumerProps } from '../config-provider';\n\nexport default class UploadList extends Component {\n  static defaultProps = {\n    listType: 'text', // or picture\n    progressAttr: {\n      strokeWidth: 2,\n      showInfo: false,\n    },\n    showRemoveIcon: true,\n    showPreviewIcon: true,\n    previewFile: previewImage,\n  };\n\n  handleClose = file => {\n    const { onRemove } = this.props;\n    if (onRemove) {\n      onRemove(file);\n    }\n  };\n\n  handlePreview = (file, e) => {\n    const { onPreview } = this.props;\n    if (!onPreview) {\n      return;\n    }\n    e.preventDefault();\n    return onPreview(file);\n  };\n\n  componentDidUpdate() {\n    const { listType, items, previewFile } = this.props;\n    if (listType !== 'picture' && listType !== 'picture-card') {\n      return;\n    }\n    (items || []).forEach(file => {\n      if (\n        typeof document === 'undefined' ||\n        typeof window === 'undefined' ||\n        !window.FileReader ||\n        !window.File ||\n        !(file.originFileObj instanceof File) ||\n        file.thumbUrl !== undefined\n      ) {\n        return;\n      }\n      file.thumbUrl = '';\n      if (previewFile) {\n        previewFile(file.originFileObj).then(previewDataUrl => {\n          // Need append '' to avoid dead loop\n          file.thumbUrl = previewDataUrl || '';\n          this.forceUpdate();\n        });\n      }\n    });\n  }\n\n  renderUploadList = ({ getPrefixCls }) => {\n    const {\n      prefixCls: customizePrefixCls,\n      items = [],\n      listType,\n      showPreviewIcon,\n      showRemoveIcon,\n      locale,\n    } = this.props;\n    const prefixCls = getPrefixCls('upload', customizePrefixCls);\n    const list = items.map(file => {\n      let progress;\n      let icon = <Icon type={file.status === 'uploading' ? 'loading' : 'paper-clip'} />;\n\n      if (listType === 'picture' || listType === 'picture-card') {\n        if (listType === 'picture-card' && file.status === 'uploading') {\n          icon = <div className={`${prefixCls}-list-item-uploading-text`}>{locale.uploading}</div>;\n        } else if (!file.thumbUrl && !file.url) {\n          icon = (\n            <Icon className={`${prefixCls}-list-item-thumbnail`} type=\"picture\" theme=\"twoTone\" />\n          );\n        } else {\n          const thumbnail = isImageUrl(file) ? (\n            <img src={file.thumbUrl || file.url} alt={file.name} />\n          ) : (\n            <Icon type=\"file\" className={`${prefixCls}-list-item-icon`} theme=\"twoTone\" />\n          );\n          icon = (\n            <a\n              className={`${prefixCls}-list-item-thumbnail`}\n              onClick={e => this.handlePreview(file, e)}\n              href={file.url || file.thumbUrl}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              {thumbnail}\n            </a>\n          );\n        }\n      }\n\n      if (file.status === 'uploading') {\n        // show loading icon if upload progress listener is disabled\n        const loadingProgress =\n          'percent' in file ? (\n            <Progress type=\"line\" {...this.props.progressAttr} percent={file.percent} />\n          ) : null;\n\n        progress = (\n          <div className={`${prefixCls}-list-item-progress`} key=\"progress\">\n            {loadingProgress}\n          </div>\n        );\n      }\n      const infoUploadingClass = classNames({\n        [`${prefixCls}-list-item`]: true,\n        [`${prefixCls}-list-item-${file.status}`]: true,\n      });\n      const linkProps =\n        typeof file.linkProps === 'string' ? JSON.parse(file.linkProps) : file.linkProps;\n      const preview = file.url ? (\n        <a\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          className={`${prefixCls}-list-item-name`}\n          title={file.name}\n          {...linkProps}\n          href={file.url}\n          onClick={e => this.handlePreview(file, e)}\n        >\n          {file.name}\n        </a>\n      ) : (\n        <span\n          className={`${prefixCls}-list-item-name`}\n          onClick={e => this.handlePreview(file, e)}\n          title={file.name}\n        >\n          {file.name}\n        </span>\n      );\n      const style: React.CSSProperties = {\n        pointerEvents: 'none',\n        opacity: 0.5,\n      };\n      const previewIcon = showPreviewIcon ? (\n        <a\n          href={file.url || file.thumbUrl}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          style={file.url || file.thumbUrl ? undefined : style}\n          onClick={e => this.handlePreview(file, e)}\n          title={locale.previewFile}\n        >\n          <Icon type=\"eye-o\" />\n        </a>\n      ) : null;\n      const removeIcon = showRemoveIcon ? (\n        <Icon type=\"delete\" title={locale.removeFile} onClick={() => this.handleClose(file)} />\n      ) : null;\n      const removeIconClose = showRemoveIcon ? (\n        <Icon type=\"close\" title={locale.removeFile} onClick={() => this.handleClose(file)} />\n      ) : null;\n      const actions =\n        listType === 'picture-card' && file.status !== 'uploading' ? (\n          <span className={`${prefixCls}-list-item-actions`}>\n            {previewIcon}\n            {removeIcon}\n          </span>\n        ) : (\n          removeIconClose\n        );\n      let message;\n      if (file.response && typeof file.response === 'string') {\n        message = file.response;\n      } else {\n        message = (file.error && file.error.statusText) || locale.uploadError;\n      }\n      const iconAndPreview =\n        file.status === 'error' ? (\n          <Tooltip title={message}>\n            {icon}\n            {preview}\n          </Tooltip>\n        ) : (\n          <span>\n            {icon}\n            {preview}\n          </span>\n        );\n\n      return (\n        <div className={infoUploadingClass} key={file.uid}>\n          <div className={`${prefixCls}-list-item-info`}>{iconAndPreview}</div>\n          {actions}\n          <Animate transitionName=\"fade\" component=\"\">\n            {progress}\n          </Animate>\n        </div>\n      );\n    });\n    const listClassNames = classNames({\n      [`${prefixCls}-list`]: true,\n      [`${prefixCls}-list-${listType}`]: true,\n    });\n    const animationDirection = listType === 'picture-card' ? 'animate-inline' : 'animate';\n    return (\n      <Animate\n        transitionName={`${prefixCls}-${animationDirection}`}\n        component=\"div\"\n        className={listClassNames}\n      >\n        {list}\n      </Animate>\n    );\n  };\n\n  render() {\n    return <ConfigConsumer>{this.renderUploadList}</ConfigConsumer>;\n  }\n}\n"],"file":"UploadList.js"}